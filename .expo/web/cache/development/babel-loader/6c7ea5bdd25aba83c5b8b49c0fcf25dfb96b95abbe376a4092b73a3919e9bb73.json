{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport RideScreen from \"../screens/Ride\";\nimport RideHistoryScreen from \"../screens/RideHistory\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar BottomTabNavigator = function (_Component) {\n  _inherits(BottomTabNavigator, _Component);\n  var _super = _createSuper(BottomTabNavigator);\n  function BottomTabNavigator() {\n    _classCallCheck(this, BottomTabNavigator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BottomTabNavigator, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n                var iconName;\n                if (route.name === \"Ride\") {\n                  iconName = \"bicycle\";\n                } else if (route.name === \"Ride History\") {\n                  iconName = \"time\";\n                }\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color,\n                  size: size\n                });\n              }\n            };\n          },\n          tabBarOptions: {\n            activeTintColor: \"#FBE5C0\",\n            inactiveTintColor: \"black\",\n            style: {\n              height: 100,\n              borderTopWidth: 0,\n              backgroundColor: \"#F88379\"\n            },\n            labelStyle: {\n              fontSize: 20,\n              fontFamily: \"Rajdhani_600SemiBold\"\n            },\n            labelPosition: \"below-icon\",\n            tabStyle: {\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Ride\",\n            component: RideScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Ride History\",\n            component: RideHistoryScreen\n          })]\n        })\n      });\n    }\n  }]);\n  return BottomTabNavigator;\n}(Component);\nexport { BottomTabNavigator as default };","map":{"version":3,"names":["React","Component","NavigationContainer","createBottomTabNavigator","Ionicons","RideScreen","RideHistoryScreen","Tab","BottomTabNavigator","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","style","height","borderTopWidth","backgroundColor","labelStyle","fontSize","fontFamily","labelPosition","tabStyle","alignItems","justifyContent"],"sources":["C:/Users/aryan/Downloads/PRO-C74-ProjectTemplate-main/components/BottomTabNavigator.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport RideScreen from \"../screens/Ride\";\r\nimport RideHistoryScreen from \"../screens/RideHistory\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default class BottomTabNavigator extends Component {\r\n  render() {\r\n    return (\r\n      <NavigationContainer>\r\n        <Tab.Navigator\r\n          screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n              let iconName;\r\n\r\n              if (route.name === \"Ride\") {\r\n                iconName = \"bicycle\";\r\n              } else if (route.name === \"Ride History\") {\r\n                iconName = \"time\";\r\n              }\r\n\r\n              // You can return any component that you like here!\r\n              return (\r\n                <Ionicons\r\n                  name={iconName}\r\n                  size={size}\r\n                  color={color}\r\n                  size={size}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n          tabBarOptions={{\r\n            activeTintColor: \"#FBE5C0\",\r\n            inactiveTintColor: \"black\",\r\n            style: {\r\n              height: 100,\r\n              borderTopWidth: 0,\r\n              backgroundColor: \"#F88379\"\r\n            },\r\n            labelStyle: {\r\n              fontSize: 20,\r\n              fontFamily: \"Rajdhani_600SemiBold\"\r\n            },\r\n            labelPosition: \"below-icon\",\r\n            tabStyle: {\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }\r\n          }}\r\n        >\r\n          <Tab.Screen name=\"Ride\" component={RideScreen} />\r\n          <Tab.Screen name=\"Ride History\" component={RideHistoryScreen} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;AAEf,OAAOC,UAAU;AACjB,OAAOC,iBAAiB;AAA+B;AAAA;AAEvD,IAAMC,GAAG,GAAGJ,wBAAwB,EAAE;AAAC,IAElBK,kBAAkB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACrC,kBAAS;MACP,OACE,KAAC,mBAAmB;QAAA,UAClB,MAAC,GAAG,CAAC,SAAS;UACZ,aAAa,EAAE;YAAA,IAAGC,KAAK,QAALA,KAAK;YAAA,OAAQ;cAC7BC,UAAU,EAAE,2BAA8B;gBAAA,IAA3BC,OAAO,SAAPA,OAAO;kBAAEC,KAAK,SAALA,KAAK;kBAAEC,IAAI,SAAJA,IAAI;gBACjC,IAAIC,QAAQ;gBAEZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;kBACzBD,QAAQ,GAAG,SAAS;gBACtB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,cAAc,EAAE;kBACxCD,QAAQ,GAAG,MAAM;gBACnB;gBAGA,OACE,KAAC,QAAQ;kBACP,IAAI,EAAEA,QAAS;kBACf,IAAI,EAAED,IAAK;kBACX,KAAK,EAAED,KAAM;kBACb,IAAI,EAAEC;gBAAK,EACX;cAEN;YACF,CAAC;UAAA,CAAE;UACH,aAAa,EAAE;YACbG,eAAe,EAAE,SAAS;YAC1BC,iBAAiB,EAAE,OAAO;YAC1BC,KAAK,EAAE;cACLC,MAAM,EAAE,GAAG;cACXC,cAAc,EAAE,CAAC;cACjBC,eAAe,EAAE;YACnB,CAAC;YACDC,UAAU,EAAE;cACVC,QAAQ,EAAE,EAAE;cACZC,UAAU,EAAE;YACd,CAAC;YACDC,aAAa,EAAE,YAAY;YAC3BC,QAAQ,EAAE;cACRC,UAAU,EAAE,QAAQ;cACpBC,cAAc,EAAE;YAClB;UACF,CAAE;UAAA,WAEF,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,MAAM;YAAC,SAAS,EAAEvB;UAAW,EAAG,EACjD,KAAC,GAAG,CAAC,MAAM;YAAC,IAAI,EAAC,cAAc;YAAC,SAAS,EAAEC;UAAkB,EAAG;QAAA;MAClD,EACI;IAE1B;EAAC;EAAA;AAAA,EAlD6CL,SAAS;AAAA,SAApCO,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}